problem 1.3: 0/10
  response: (1000, 3) -> (1004, 5) -> (1009, 91); correct:  (1000, 3) -> (1003, 1) -> (1004, 5) -> (1009, 91)
  explanation: ptr2 points to 3 bytes at address 1000
problem 1.4: 0/10
  response: (1000, 3) -> (1004, 5) -> (1019, 81); correct: (1000, 3) -> (1003, 1) -> (1004, 5) -> (1019, 81)
  explanation: the smallest free list item at least as large as 10 bytes is (1009, 91)
problem 1.5: 0/10
  response: (1000, 3) -> (1004, 5) -> (1027, 73); correct:  (1000, 3) -> (1003, 1) -> (1004, 5) -> (1027, 73)
  explanation: the smallest free list item at least as large as 8 bytes is (1019, 81)
problem 1.7: 0/10
  response: (1000, 2) -> (1072, 18); correct: (1000,2) -> (1082,18)
  explanation: the largest free list item is (1052, 48)
problem 1.8: 0/10
  response: (1000, 2) -> (1002, 26) -> (1072, 18); correct:  (1000,28) -> (1082,18)
  explanation: ptr1 points to 26 bytes at address 1002; coelescing occurs after the free operation
problem 1.9: 0/10
  response: (1000, 2) -> (1015, 13) -> (1072, 18); correct: (1013,15) -> (1082,18)
  explanation: the largest free list item is (1000,28)
problem 1.10: 0/10
  response: (1000, 2) -> (1015, 13) -> (1085, 5); correct: (1013,15) -> (1095,5)
  explanation: the largest free list item is (1082,18)
problem 4.3: 0/10
  response: 64; correct: 16384
  explanation: 2^16 bytes in page table / 4 = 2^14
problem 4.4: 0/10
  response: 1024; correct: 256
  explanation: 2^6 pages * 2^2 bytes per page directory row = 2^8 bytes in page directory
problem 4.5: 0/10
  response: 1088/65536; correct: 0.254
  explanation: (2^14 bytes for page table chunks + 256 bytes for page directory)/2^16 bytes in full page table
problem 5.4: 0/10
  response: 35650.00; correct: 3.565
problem 5.5: 0/10
  response: 59410.00; correct: 5.941
problem 6.4: 0/1
  response: 5; correct: 12
  explanation: A pages is 4 KB, and 4 KB = 2^12, so 12 offset bits are needed.
